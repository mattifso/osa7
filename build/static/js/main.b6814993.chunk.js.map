{"version":3,"sources":["components/Blog.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogsReducer.js","components/AddBlogForm.js","components/LoginForm.js","services/users.js","reducers/usersReducer.js","components/UserList.js","components/UserDetails.js","components/BlogDetails.js","components/Notification.js","services/login.js","reducers/loggedInUserReducer.js","components/App.js","store.js","index.js"],"names":["getLink","blog","_id","Blog","_ref","react_default","a","createElement","href","title","author","baseUrl","token","services_blogs","getAll","axios","get","then","response","data","setToken","newToken","concat","create","Object","asyncToGenerator","regenerator_default","mark","_callee","newObject","config","blogData","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","t0","console","log","stop","this","_x","apply","arguments","addComment","_ref2","_callee2","blogId","comment","url","_context2","join","_x2","_x3","notify","isError","message","dispatch","type","setTimeout","reducer","store","length","undefined","action","initBlogs","blogs","blogService","_ref3","_callee3","addedComment","_context3","Array","isArray","map","b","objectSpread","comments","toConsumableArray","AddBlogForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createBlogEntry","event","preventDefault","addBlog","state","handleAddBlogFieldChange","setState","defineProperty","target","name","value","onSubmit","FormGroup","style","width","ControlLabel","FormControl","onChange","Button","bsStyle","onClick","React","Component","mapDispatchToProps","createdBlog","ConnectedAddBlogForm","connect","LoginForm","handleSubmit","handleChange","username","password","services_users","initUsers","users","userService","UserList","user","id","Table","key","ConnectedUserList","UserDetails","userId","_this2","find","u","ConnectedUser","BlogDetails","handleCommentChange","findBlog","likes","c","index","ConnectedBlogDetails","bindActionCreators","Notification","_React$Component","inherits","createClass","notification","className","border","borderStyle","borderColor","padding","ConnectedNotification","services_login","login","credentials","App","handleLoginFieldChange","logIn","loadUserFromLocalStorage","BrowserRouter","components_Notification","loggedInUser","hideWhenVisible","display","loginVisible","showWhenVisible","components_LoginForm","loginForm","Navbar","inverse","collapseOnSelect","Header","Brand","Nav","lib","to","NavItem","logOut","Route","exact","path","render","components_UserList","match","components_UserDetails","params","components_BlogDetails","components_AddBlogForm","components_Blog","loggedInUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","removeItem","ConnectedApp","combineReducers","usersReducer","blogsReducer","loggedInUserReducer","notificationReducer","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.b6814993.chunk.js","sourcesContent":["import React from 'react'\n\nconst getLink = (blog) => '/blogs/' + blog._id\n\nconst Blog = ({ blog }) => (\n  <div>\n    <a href={getLink(blog)}>{blog.title} {blog.author}</a>\n  </div>\n)\n\nexport default Blog","// @flow\nimport axios from 'axios'\nconst baseUrl = '/api/blogs'\n\ntype blogType = { _id: string, title: string, author: string, url: string, comments: Array<string> }\n\nlet token = null\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject: { title: string, author: string, url: string }): Promise<?blogType> => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n\n  try {\n    const response = await axios.post(baseUrl, newObject, config)\n    const blogData: blogType = (response.data: blogType)\n    return blogData\n  } catch (error) {\n    console.log('error occurred', error)\n  }\n}\n\nconst addComment = async (blogId: string, comment: string) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n\n  try {\n    const url = [baseUrl, '/', blogId, '/', 'comments'].join('')\n    const response = await axios.post(url, { comment: comment }, config)\n    return response.data\n  } catch (error) {\n    console.log('error occurred', error)\n  }\n}\n\nconst setToken = (newToken: string) => {\n  token = `Bearer ${newToken}`\n}\n\nexport default { getAll, setToken, create, addComment }","const reducer = (store = null, action) => {\n  if (action.type === 'NOTIFICATION') {\n    return action.data\n  }\n  if (action.type === 'CLEAR_NOTIFICATION') {\n    return null\n  }\n\n  return store\n}\n\nexport const notify = (isError, message) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'NOTIFICATION',\n      data: { isError: isError, message: message }\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, 5000)\n  }\n}\n\nexport default reducer","// @flow\nimport blogService from '../services/blogs'\nimport { notify } from './notificationReducer'\n\ntype blogType = { _id: string, title: string, author: string, url: string, comments: Array<string> }\ntype commentType = { blogId: string, comment: string }\n\nconst reducer = (store: Array<blogType> = [], action: { data: Array<blogType> | blogType | commentType, type: string }): Array<blogType> => {\n  if (action.type === 'INIT_BLOGS' && Array.isArray(action.data)) {\n    return action.data\n  }\n  if (action.type === 'ADD_COMMENT' && !Array.isArray(action.data) && action.data._id === undefined) {\n    const blogId = action.data.blogId\n    const comment = action.data.comment\n    return store.map((b: blogType): blogType => {\n      if (b._id !== blogId) {\n        return b\n      }\n      return {\n        ...b,\n        comments: [...b.comments, comment]\n      }\n    })\n  }\n  if (action.type === 'ADD_BLOG' && !Array.isArray(action.data) && action.data.comment === undefined) {\n    return [...store, action.data]\n  }\n  return store\n}\n\nexport const initBlogs = () => {\n  return async (dispatch: Function) => {\n    const blogs: Array<blogType> = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const addBlog = (blog: { title: string, author: string, url: string }) => {\n  return async (dispatch: Function) => {\n    const createdBlog: ?blogType = await blogService.create(blog)\n    if (createdBlog) {\n      dispatch({\n        type: 'ADD_BLOG',\n        data: createdBlog\n      })\n      notify(false, `Added blog \"${createdBlog.title}\"`)(dispatch)\n    }\n  }\n}\n\nexport const addComment = (blogId: string, comment: string) => {\n  return async (dispatch: Function) => {\n    const addedComment = await blogService.addComment(blogId, comment)\n    console.log('Added comment for blog', blogId, addedComment, comment)\n    dispatch({\n      type: 'ADD_COMMENT',\n      data: { blogId: blogId, comment: comment }\n    })\n  }\n}\n\nexport default reducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addBlog } from '../reducers/blogsReducer'\nimport { FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap'\n\nclass AddBlogForm extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      author: '',\n      url: ''\n    }\n  }\n\n  createBlogEntry = () => {\n    return async (event) => {\n      event.preventDefault()\n      this.props.addBlog({\n        title: this.state.title,\n        author: this.state.author,\n        url: this.state.url\n      })\n    }\n  }\n\n  handleAddBlogFieldChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    return (<div>\n      <h2>create new</h2>\n      <form onSubmit={this.createBlogEntry}>\n        <FormGroup style={{ width: '25em' }}>\n          <p>\n            <ControlLabel>title</ControlLabel>\n            <FormControl\n              name=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.handleAddBlogFieldChange}\n            />\n          </p>\n          <p>\n            <ControlLabel>author</ControlLabel>\n            <FormControl\n              name=\"author\"\n              type=\"text\"\n              value={this.state.author}\n              onChange={this.handleAddBlogFieldChange}\n            />\n          </p>\n          <p>\n            <ControlLabel>url</ControlLabel>\n            <FormControl\n              name=\"url\"\n              type=\"text\"\n              value={this.state.url}\n              onChange={this.handleAddBlogFieldChange}\n            />\n            <Button bsStyle=\"success\" onClick={this.createBlogEntry()}>create</Button>\n          </p>\n        </FormGroup>\n      </form>\n    </div >)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs\n  }\n}\n\nconst mapDispatchToProps = {\n  addBlog\n}\n\nconst ConnectedAddBlogForm = connect(mapStateToProps, mapDispatchToProps)(AddBlogForm)\n\nexport default ConnectedAddBlogForm","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap'\n\nconst LoginForm = ({ handleSubmit, handleChange, username, password }) => {\n  return (\n    <div>\n      <h2>Log in to application</h2>\n      <form onSubmit={handleSubmit}>\n        <FormGroup style={{ width: '25em' }}>\n          <div>\n            <ControlLabel>username</ControlLabel>\n            <FormControl\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <ControlLabel>password</ControlLabel>\n            <FormControl\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </div>\n          <Button bsStyle=\"success\" type=\"submit\">kirjaudu</Button>\n        </FormGroup>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll }","import userService from '../services/users'\n\nconst reducer = (store = [], action) => {\n  if (action.type === 'INIT_USERS') {\n    return action.data\n  }\n  return store\n}\n\nexport const initUsers = () => {\n  return async (dispatch) => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users\n    })\n  }\n}\n\nexport default reducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { initUsers } from '../reducers/usersReducer'\nimport { Table } from 'react-bootstrap'\n\nclass UserList extends React.Component {\n\n  componentDidMount() {\n    this.props.initUsers()\n  }\n\n  getLink(user) {\n    return '/users/' + user.id\n  }\n\n  render() {\n    return (\n      <div>\n        <Table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>Blogs added</th>\n            </tr>\n            {this.props.users.map(user => (\n              <tr key={user.id}>\n                <td><a href={this.getLink(user)}>{user.name}</a></td>\n                <td>{user.blogs.length}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users\n  }\n}\n\nconst mapDispatchToProps = {\n  initUsers\n}\n\nconst ConnectedUserList = connect(mapStateToProps, mapDispatchToProps)(UserList)\n\nexport default ConnectedUserList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initUsers } from '../reducers/usersReducer'\n\nclass UserDetails extends React.Component {\n  componentDidMount() {\n    this.props.initUsers()\n  }\n\n  static propTypes = {\n    userId: PropTypes.string.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: props.userId\n    }\n  }\n\n  render() {\n    const user = this.props.users.find(u => u.id === this.props.userId)\n    const blogs = user ? user.blogs : []\n    return (\n      <div>\n        <h2>{user ? user.name : ''}</h2>\n        <h3>Added blogs</h3>\n        <ul>\n          {blogs.map(b => <li key={b._id}>{b.title}</li>)}\n        </ul>\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users,\n  }\n}\n\nconst mapDispatchToProps = {\n  initUsers\n}\n\nconst ConnectedUser = connect(mapStateToProps, mapDispatchToProps)(UserDetails)\n\nexport default ConnectedUser","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initBlogs, addComment } from '../reducers/blogsReducer'\nimport { bindActionCreators } from 'redux'\n\nclass BlogDetails extends React.Component {\n  componentDidMount() {\n    this.props.initBlogs()\n  }\n\n  static propTypes = {\n    blogId: PropTypes.string.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: props.userId,\n      comment: ''\n    }\n  }\n\n  addComment = (event) => {\n    event.preventDefault()\n    this.props.addComment(this.props.blogId, this.state.comment)\n    this.setState({ comment: '' })\n  }\n\n  handleCommentChange = (event) => {\n    event.preventDefault()\n    this.setState({ comment: event.target.value })\n  }\n\n  findBlog = () => (this.props.blogs.find(b => b._id === this.props.blogId))\n\n  render() {\n    const blog = this.findBlog()\n    return (\n      blog ?\n        <div>\n          <h2>{blog.title}</h2>\n          <div><a href={blog.url}>{blog.url}</a></div>\n          <div>likes: {blog.likes}</div>\n          <div>added by {blog.user.name}</div>\n          <div>\n            Comments:\n            <div>\n              <form onSubmit={this.addComment}>\n                <div><input value={this.state.comment} onChange={this.handleCommentChange} /></div>\n                <button>add comment</button>\n              </form>\n            </div>\n            <ul>\n              {blog.comments.map((c, index) => {\n                return (<li key={index}>{c}</li>)\n              })}\n            </ul>\n          </div>\n        </div>\n        : ''\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  initBlogs,\n  addComment\n}, dispatch)\n\nconst ConnectedBlogDetails = connect(mapStateToProps, mapDispatchToProps)(BlogDetails)\n\nexport default ConnectedBlogDetails","import React from 'react'\nimport { connect } from 'react-redux'\n\nexport class Notification extends React.Component {\n  render() {\n    const notification = this.props.notification\n    return (\n      notification ?\n        notification.isError ?\n          <div className=\"errorMessage\" style={{ border: 1, borderStyle: 'solid', borderColor: 'red', padding: 15, width: '25em' }}>\n            {notification.message}\n          </div> :\n          <div className=\"successMessage\" style={{ border: 1, borderStyle: 'solid', borderColor: 'green', padding: 15, width: '25em' }}>\n            {notification.message}\n          </div>\n        : null\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n  }\n}\n\nconst ConnectedNotification = connect(mapStateToProps, null)(Notification)\n\nexport default ConnectedNotification","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport { notify } from './notificationReducer'\n\nconst reducer = (store = null, action) => {\n  if (action.type === 'USER_LOGGED_IN') {\n    return action.data\n  }\n  if (action.type === 'USER_LOGGED_OUT') {\n    return null\n  }\n  if (action.type === 'USER_LOADED') {\n    return action.data\n  }\n\n  return store\n}\n\nexport const logIn = (credentials) => {\n  return async (dispatch) => {\n    try {\n      const user = await loginService.login(credentials)\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      dispatch({\n        type: 'USER_LOGGED_IN',\n        data: user\n      })\n    } catch (error) {\n      notify(true, 'Invalid username or password')(dispatch)\n    }\n  }\n}\n\nexport const logOut = () => {\n  return (dispatch) => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.setToken('')\n    dispatch({\n      type: 'USER_LOGGED_OUT'\n    })\n    notify(false, 'Logged out')(dispatch)\n  }\n}\n\nexport const loadUserFromLocalStorage = () => {\n  return (dispatch) => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      blogService.setToken(user.token)\n      dispatch({\n        type: 'USER_LOADED',\n        data: user\n      })\n    }\n  }\n}\n\nexport default reducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Blog from './Blog'\nimport AddBlogForm from './AddBlogForm'\nimport LoginForm from './LoginForm'\nimport UserList from './UserList'\nimport UserDetails from './UserDetails'\nimport BlogDetails from './BlogDetails'\nimport Notification from './Notification'\nimport { initBlogs } from '../reducers/blogsReducer'\nimport { logIn, logOut, loadUserFromLocalStorage } from '../reducers/loggedInUserReducer'\nimport { Nav, Navbar, NavItem } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: ''\n    }\n  }\n\n  componentDidMount() {\n    this.props.initBlogs()\n    this.props.loadUserFromLocalStorage()\n  }\n\n  handleLoginFieldChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  login = async (event) => {\n    event.preventDefault()\n    this.props.logIn({ username: this.state.username, password: this.state.password })\n  }\n\n  render() {\n    const loginForm = () => {\n      const hideWhenVisible = { display: this.state.loginVisible ? 'none' : '' }\n      const showWhenVisible = { display: this.state.loginVisible ? '' : 'none' }\n\n      return (\n        <div>\n          <div style={hideWhenVisible}>\n            <button onClick={() => this.setState({ loginVisible: true })}>log in</button>\n          </div>\n          <div style={showWhenVisible}>\n            <LoginForm\n              username={this.state.username}\n              password={this.state.password}\n              handleChange={this.handleLoginFieldChange}\n              handleSubmit={this.login}\n            />\n            <button onClick={() => this.setState({ loginVisible: false })}>cancel</button>\n          </div>\n        </div>\n      )\n    }\n\n    const userInfo = () => (\n      <div>\n        <Navbar inverse collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              blog app\n            </Navbar.Brand>\n          </Navbar.Header>\n          <Nav>\n            <LinkContainer to=\"/\">\n              <NavItem>\n                blogs\n              </NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/users\">\n              <NavItem>\n                users\n              </NavItem>\n            </LinkContainer>\n            <NavItem>\n              <i>{this.props.loggedInUser.name} logged in</i>\n            </NavItem>\n            <NavItem>\n              <button onClick={this.props.logOut}>logout</button>\n            </NavItem>\n          </Nav>\n        </Navbar>\n      </div >\n    )\n\n    const blogList = () => (\n      <div>\n        <AddBlogForm />\n        {this.props.blogs.map(blog => (\n          <Blog key={blog._id} blog={blog} />\n        ))}\n      </div>\n    )\n\n    return (\n      <Router>\n        <div className=\"container\">\n          <Notification />\n          {!this.props.loggedInUser && loginForm()}\n          {this.props.loggedInUser && userInfo()}\n          <Route exact path=\"/users\" render={() =>\n            <div>\n              <UserList />\n            </div>} />\n          <Route exact path=\"/users/:id\" render={({ match }) => <UserDetails userId={match.params.id} />} />\n          <Route exact path=\"/blogs/:id\" render={({ match }) => <BlogDetails blogId={match.params.id} />} />\n          <Route exact path=\"/\" render={() => (this.props.loggedInUser && blogList())} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    loggedInUser: state.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n  initBlogs,\n  loadUserFromLocalStorage,\n  logIn,\n  logOut\n}\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default ConnectedApp\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport usersReducer from './reducers/usersReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport loggedInUserReducer from './reducers/loggedInUserReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  users: usersReducer,\n  blogs: blogsReducer,\n  loggedInUser: loggedInUserReducer,\n  notification: notificationReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport store from './store'\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root')\n  )\n}\n\nrender()\nstore.subscribe(render)"],"sourceRoot":""}